{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d225289e-a350-434a-8d01-5051ed824d29",
   "metadata": {
    "tags": []
   },
   "source": [
    "# トラカンデータの前処理\n",
    "- about\n",
    "    - nullが多い列の削除\n",
    "    - \\['全車(１)','全車(2)','全車(追)','全車(路)'\\]の欠損状況から車線数を算出\n",
    "    - (2kmトラカンデータ) トラカンが設置している区間を抽出\n",
    "- author\n",
    "    - 松永\n",
    "- ref\n",
    "    - `../1_0_traffic_deleteNULLcols_930.ipynb`\n",
    "- Input\n",
    "    - 生トラカンデータに対し、文字コード変換・ヘッダの除去をシェルで加えたデータ\n",
    "        - ref: `./handle_raw.ipynb`\n",
    "    - 代表トラカン: `raw_<道路名>_<期間>.csv`\n",
    "    - 2kmトラカン: `raw_<道路名>_<期間>_2KP.csv`\n",
    "- Output\n",
    "    - 代表トラカン: `<道路名>_<期間>.csv`\n",
    "    - 2kmトラカン: `<道路名>_<期間>_2KP.csv`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "397d2bfb-6c65-4f58-b46f-2c1e87f45adf",
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime as dt\n",
    "import jpholiday\n",
    "\n",
    "import cudf\n",
    "import cupy\n",
    "import matplotlib.pyplot as plt\n",
    "import missingno as msno\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# cupy.cuda.Device(1).use()\n",
    "# plt.rcParams['font.family'] = 'Noto Sans JP'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b785f20b-8cf5-4333-9565-292c9de881e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "PROCESSED_DATA_DIR = '../../Input_processed_data'\n",
    "\n",
    "IC_CSV = f'{PROCESSED_DATA_DIR}/road_master/ic_preprocessed.csv'\n",
    "IC_SUBNET_CSV = f'{PROCESSED_DATA_DIR}/road_master/icnet_sub.csv'\n",
    "\n",
    "TARGET_ROAD = 'kannetsu'\n",
    "# TARGET_ROAD = 'touhoku'\n",
    "PERIOD = '20240507-20240831'\n",
    "\n",
    "TRAFFIC_CSV =f'{PROCESSED_DATA_DIR}/traffic/raw_{TARGET_ROAD}_{PERIOD}_2KP.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0feb8326-3afc-4a7e-b3d7-914f1974e915",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/envs/rapids/lib/python3.8/site-packages/IPython/core/interactiveshell.py:3457: DtypeWarning: Columns (22,28,34,40) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>支社</th>\n",
       "      <th>区分</th>\n",
       "      <th>道路</th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>曜日</th>\n",
       "      <th>平休1</th>\n",
       "      <th>平休2（休日に土曜日含む）</th>\n",
       "      <th>時刻</th>\n",
       "      <th>...</th>\n",
       "      <th>車線率(追)</th>\n",
       "      <th>OCC(追)</th>\n",
       "      <th>速度(追)</th>\n",
       "      <th>エラー数.2</th>\n",
       "      <th>全車(路)</th>\n",
       "      <th>大車(路)</th>\n",
       "      <th>車線率(路)</th>\n",
       "      <th>OCC(路)</th>\n",
       "      <th>速度(路)</th>\n",
       "      <th>エラー数.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>関東支社</td>\n",
       "      <td>速度ループ</td>\n",
       "      <td>関越自動車道</td>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>火</td>\n",
       "      <td>平</td>\n",
       "      <td>平</td>\n",
       "      <td>0:0</td>\n",
       "      <td>...</td>\n",
       "      <td>47.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>関東支社</td>\n",
       "      <td>速度ループ</td>\n",
       "      <td>関越自動車道</td>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>火</td>\n",
       "      <td>平</td>\n",
       "      <td>平</td>\n",
       "      <td>0:5</td>\n",
       "      <td>...</td>\n",
       "      <td>60.6</td>\n",
       "      <td>5.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>関東支社</td>\n",
       "      <td>速度ループ</td>\n",
       "      <td>関越自動車道</td>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>火</td>\n",
       "      <td>平</td>\n",
       "      <td>平</td>\n",
       "      <td>0:10</td>\n",
       "      <td>...</td>\n",
       "      <td>37.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>関東支社</td>\n",
       "      <td>速度ループ</td>\n",
       "      <td>関越自動車道</td>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>火</td>\n",
       "      <td>平</td>\n",
       "      <td>平</td>\n",
       "      <td>0:15</td>\n",
       "      <td>...</td>\n",
       "      <td>39.5</td>\n",
       "      <td>1.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>関東支社</td>\n",
       "      <td>速度ループ</td>\n",
       "      <td>関越自動車道</td>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>火</td>\n",
       "      <td>平</td>\n",
       "      <td>平</td>\n",
       "      <td>0:20</td>\n",
       "      <td>...</td>\n",
       "      <td>36.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     支社     区分      道路     年  月  日 曜日 平休1 平休2（休日に土曜日含む）    時刻  ... 車線率(追)  \\\n",
       "0  関東支社  速度ループ  関越自動車道  2024  5  7  火   平             平   0:0  ...   47.8   \n",
       "1  関東支社  速度ループ  関越自動車道  2024  5  7  火   平             平   0:5  ...   60.6   \n",
       "2  関東支社  速度ループ  関越自動車道  2024  5  7  火   平             平  0:10  ...   37.1   \n",
       "3  関東支社  速度ループ  関越自動車道  2024  5  7  火   平             平  0:15  ...   39.5   \n",
       "4  関東支社  速度ループ  関越自動車道  2024  5  7  火   平             平  0:20  ...   36.6   \n",
       "\n",
       "   OCC(追) 速度(追)  エラー数.2  全車(路)  大車(路)  車線率(路)  OCC(路)  速度(路)  エラー数.3  \n",
       "0     3.0  89.0     NaN    NaN    NaN     NaN     NaN    NaN     NaN  \n",
       "1     5.0  92.0     NaN    NaN    NaN     NaN     NaN    NaN     NaN  \n",
       "2     2.0  99.0     NaN    NaN    NaN     NaN     NaN    NaN     NaN  \n",
       "3     1.0  94.0     NaN    NaN    NaN     NaN     NaN    NaN     NaN  \n",
       "4     1.0  92.0     NaN    NaN    NaN     NaN     NaN    NaN     NaN  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_traffic = pd.read_csv(TRAFFIC_CSV)\n",
    "df_traffic.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "870ce0c3-a6ff-4e23-895e-962d86a18578",
   "metadata": {},
   "source": [
    "## 欠損処理"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "816f4dc3-6e51-46f3-8a3b-3d306e77c624",
   "metadata": {},
   "source": [
    "### 車線情報の欠損状況から車線数をカウント"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f5e5831f-8bbc-452d-b440-1e7ddc97340d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_lane_count(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    lane_cols = ['全車(1)', '全車(2)', '全車(追)','全車(路)']\n",
    "    df.loc[:, 'lane_count'] = len(lane_cols) - df.loc[:, lane_cols].isna().sum(axis=1)\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "49cee9e2-2991-4037-89f8-8e283cb120da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3    2963100\n",
       "2     983340\n",
       "0     366456\n",
       "4     235872\n",
       "1     101280\n",
       "Name: lane_count, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_traffic = add_lane_count(df_traffic)\n",
    "\n",
    "df_traffic.lane_count.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a52c3f9f-c2b1-4151-b9d4-ae651610b443",
   "metadata": {},
   "source": [
    "### エラーの多いカラムを削除"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8753614b-533d-4764-8ea5-f2e5d1a36abe",
   "metadata": {},
   "outputs": [],
   "source": [
    "DROP_COLS = [\n",
    "    'エラー数', '全車(2)', '大車(2)', '車線率(2)', 'OCC(2)', '速度(2)', 'エラー数.1', \n",
    "    'エラー数.2', '全車(路)', '大車(路)', '車線率(路)', 'OCC(路)', '速度(路)','エラー数.3'\n",
    "]\n",
    "df_traffic.drop(DROP_COLS, axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d29de2fb-6617-4a1b-ba0b-720db5f0eddc",
   "metadata": {},
   "source": [
    "全車線が使用できない場合、全車=0となる"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "71481e2d-1d88-44e3-b10f-445673ddcaf4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "      <th>方向</th>\n",
       "      <th>区間名称</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>440904</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:0</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440905</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:5</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440906</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:10</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440907</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:15</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440908</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:20</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650043</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:35</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650044</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:40</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650045</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:45</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650046</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:50</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650047</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:55</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>366456 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            年  月   日     時刻  方向         区間名称\n",
       "440904   2024  5  16   22:0  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440905   2024  5  16   22:5  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440906   2024  5  16  22:10  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440907   2024  5  16  22:15  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440908   2024  5  16  22:20  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "...       ... ..  ..    ...  ..          ...\n",
       "4650043  2024  8  31  23:35  下り      昭和　〜　沼田\n",
       "4650044  2024  8  31  23:40  下り      昭和　〜　沼田\n",
       "4650045  2024  8  31  23:45  下り      昭和　〜　沼田\n",
       "4650046  2024  8  31  23:50  下り      昭和　〜　沼田\n",
       "4650047  2024  8  31  23:55  下り      昭和　〜　沼田\n",
       "\n",
       "[366456 rows x 6 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_traffic.loc[df_traffic.全車.isna(), ['年', '月', '日', '時刻', '方向', '区間名称']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "076a31f5-4c64-4798-9c78-3a305f52b381",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "      <th>方向</th>\n",
       "      <th>区間名称</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>440904</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:0</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440905</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:5</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440906</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:10</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440907</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:15</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440908</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>22:20</td>\n",
       "      <td>上り</td>\n",
       "      <td>川越　〜　鶴ヶ島ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650043</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:35</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650044</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:40</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650045</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:45</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650046</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:50</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4650047</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:55</td>\n",
       "      <td>下り</td>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>366456 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            年  月   日     時刻  方向         区間名称\n",
       "440904   2024  5  16   22:0  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440905   2024  5  16   22:5  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440906   2024  5  16  22:10  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440907   2024  5  16  22:15  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "440908   2024  5  16  22:20  上り  川越　〜　鶴ヶ島ＪＣＴ\n",
       "...       ... ..  ..    ...  ..          ...\n",
       "4650043  2024  8  31  23:35  下り      昭和　〜　沼田\n",
       "4650044  2024  8  31  23:40  下り      昭和　〜　沼田\n",
       "4650045  2024  8  31  23:45  下り      昭和　〜　沼田\n",
       "4650046  2024  8  31  23:50  下り      昭和　〜　沼田\n",
       "4650047  2024  8  31  23:55  下り      昭和　〜　沼田\n",
       "\n",
       "[366456 rows x 6 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_traffic.loc[df_traffic.lane_count == 0,  ['年', '月', '日', '時刻', '方向', '区間名称']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3fd525ab-3010-4c45-89d7-7b2cb04a341d",
   "metadata": {},
   "source": [
    "## 新たに開業した区間を従来の表記に戻す\n",
    "- 2023年9月10日「都賀西方スマートIC」の開業に伴い、2023年10月1日以降のトラカンデータにおいて、従来は「栃木都賀JCT～鹿沼」だった区間が2つに分割された\n",
    "- 分割された区間「栃木都賀JCT〜都賀西方スマートIC」「都賀西方スマートIC〜鹿沼」それぞれの区間名称を2023年10月以前と同じ「栃木都賀JCT～鹿沼」表記に置き換える"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bf848ba5-1553-4c1c-a072-5a418a333ec7",
   "metadata": {},
   "outputs": [],
   "source": [
    "start = '栃木都賀ＪＣＴ'\n",
    "end = '鹿沼'\n",
    "mid_new = '都賀西方スマートＩＣ'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "71e5941b-882b-4cf1-a097-c563e02404c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "cond = (\n",
    "    (df_traffic.区間名称 == f'{start}　〜　{mid_new}')\n",
    "    | (df_traffic.区間名称 == f'{mid_new}　〜　{end}')\n",
    ")\n",
    "df_traffic.loc[cond, '区間名称'] = f'{start}　〜　{end}'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7c8181c9-62bc-4bb4-9abc-f9964536d491",
   "metadata": {},
   "outputs": [],
   "source": [
    "assert (df_traffic.区間名称 == f'{start}　〜　{mid_new}').sum() == 0\n",
    "assert (df_traffic.区間名称 == f'{mid_new}　〜　{end}').sum() == 0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fcd4dce-11fd-4bb5-ae71-d0bb7ab5785e",
   "metadata": {},
   "source": [
    "## 2kmピッチにトラカンが設置している区間のみに限定\n",
    "- 2kmピッチにトラカンが設置されている区間の集合は`traffic_counter_segments_2KP.pkl`に保存されている\n",
    "- 2023/8/16以前のデータに関して、↑の区間に限定する"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "edce997a-1068-4811-ae84-4776e0f5222d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "with open('traffic_counter_segments_2KP.pkl', 'rb') as f:\n",
    "    tc_segments_dict = pickle.load(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "204ad442-af4f-43d3-b5d8-9b77e734f46b",
   "metadata": {},
   "outputs": [],
   "source": [
    "tc_segments_inbound = tc_segments_dict[TARGET_ROAD]['上り']\n",
    "tc_segments_outbound = tc_segments_dict[TARGET_ROAD]['下り']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4b3350b4-d3c0-4ef2-9ed6-6ccbb2f7c074",
   "metadata": {},
   "outputs": [],
   "source": [
    "cond_inbound = (df_traffic.方向 == '上り') & (df_traffic.区間名称.isin(tc_segments_inbound))\n",
    "cond_outbound =  (df_traffic.方向 == '下り') & (df_traffic.区間名称.isin(tc_segments_outbound))\n",
    "\n",
    "df_tmp = df_traffic.loc[cond_inbound | cond_outbound].reset_index(drop=True)\n",
    "\n",
    "# test\n",
    "assert set(df_tmp.loc[df_tmp.方向 == '上り', '区間名称'].drop_duplicates()) == tc_segments_inbound\n",
    "assert set(df_tmp.loc[df_tmp.方向 == '下り', '区間名称'].drop_duplicates()) == tc_segments_outbound"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "426d3c2d-751e-4f48-b24a-25992d9514c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_traffic = df_tmp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d4c0326-56be-4ed2-b017-2ab69ff0389c",
   "metadata": {},
   "source": [
    "## 準備"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a810b5bf-a775-4c80-8f79-8091fe7aa601",
   "metadata": {},
   "outputs": [],
   "source": [
    "# dtype = {\n",
    "#     '年': str, '月': str, '日': str\n",
    "# }\n",
    "\n",
    "# df_traffic = cudf.from_pandas(df_traffic).astype(dtype)\n",
    "# df_traffic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4aac8a97-670f-4d48-8598-740d80a29987",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>区間名称</th>\n",
       "      <th>全車</th>\n",
       "      <th>OCC</th>\n",
       "      <th>速度</th>\n",
       "      <th>lane_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:0</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>67.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:5</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>104.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:10</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>62.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:15</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>43.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:20</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>41.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      年  月  日    時刻  方向    KP        区間名称     全車  OCC    速度  lane_count\n",
       "0  2024  5  7   0:0  上り  2.26  大泉ＪＣＴ　〜　所沢   67.0  4.0  82.0           2\n",
       "1  2024  5  7   0:5  上り  2.26  大泉ＪＣＴ　〜　所沢  104.0  5.0  88.0           2\n",
       "2  2024  5  7  0:10  上り  2.26  大泉ＪＣＴ　〜　所沢   62.0  4.0  87.0           2\n",
       "3  2024  5  7  0:15  上り  2.26  大泉ＪＣＴ　〜　所沢   43.0  2.0  86.0           2\n",
       "4  2024  5  7  0:20  上り  2.26  大泉ＪＣＴ　〜　所沢   41.0  2.0  86.0           2"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usecols = ['年', '月', '日', '時刻', '方向', 'KP', '区間名称', '全車', 'OCC', '速度', 'lane_count']\n",
    "\n",
    "df_traffic = df_traffic.loc[:, usecols]\n",
    "df_traffic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "3459897e-c6db-4f6f-bff5-d53f42b2a216",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>3.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>6.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>8.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>117.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>120.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "      <td>下り</td>\n",
       "      <td>122.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "      <td>下り</td>\n",
       "      <td>123.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "      <td>下り</td>\n",
       "      <td>125.37</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>138 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           区間名称  方向      KP\n",
       "0    大泉ＪＣＴ　〜　所沢  上り    2.26\n",
       "1    大泉ＪＣＴ　〜　所沢  上り    3.90\n",
       "2    大泉ＪＣＴ　〜　所沢  上り    5.00\n",
       "3    大泉ＪＣＴ　〜　所沢  上り    6.13\n",
       "4    大泉ＪＣＴ　〜　所沢  上り    8.13\n",
       "..          ...  ..     ...\n",
       "133     赤城　〜　昭和  下り  117.82\n",
       "134     赤城　〜　昭和  下り  120.02\n",
       "135     昭和　〜　沼田  下り  122.00\n",
       "136     昭和　〜　沼田  下り  123.85\n",
       "137     昭和　〜　沼田  下り  125.37\n",
       "\n",
       "[138 rows x 3 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "static_cols = ['区間名称', '方向', 'KP']\n",
    "\n",
    "df_static = df_traffic.loc[:, static_cols].drop_duplicates().reset_index(drop=True)\n",
    "df_static"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a48a7d32-59cb-45a6-9285-2b53cb920162",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0:20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33691</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33692</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33693</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33694</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33695</th>\n",
       "      <td>2024</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>23:55</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>33696 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          年  月   日     時刻\n",
       "0      2024  5   7    0:0\n",
       "1      2024  5   7    0:5\n",
       "2      2024  5   7   0:10\n",
       "3      2024  5   7   0:15\n",
       "4      2024  5   7   0:20\n",
       "...     ... ..  ..    ...\n",
       "33691  2024  8  31  23:35\n",
       "33692  2024  8  31  23:40\n",
       "33693  2024  8  31  23:45\n",
       "33694  2024  8  31  23:50\n",
       "33695  2024  8  31  23:55\n",
       "\n",
       "[33696 rows x 4 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "datetime_cols = ['年', '月', '日', '時刻']\n",
    "\n",
    "df_datetime = df_traffic.loc[:, datetime_cols].drop_duplicates().reset_index(drop=True)\n",
    "df_datetime"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21ebfdeb-e64a-46cd-958a-9594b1a85b9c",
   "metadata": {},
   "source": [
    "## 静的カラムの処理"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "16c80755-2170-4e30-b83b-80c2c2a93a0f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_ic = pd.read_csv(IC_CSV)\n",
    "df_icnet = pd.read_csv(IC_SUBNET_CSV, dtype={'start_code': str, 'end_code': str, 'road_code': str})\n",
    "\n",
    "# IC名 --> ICコード\n",
    "name2code = dict(zip(df_ic['ic_name'], df_ic['ic_code']))\n",
    "name_traffic2code = dict(zip(df_ic['ic_name_traffic'], df_ic['ic_code']))\n",
    "name2code.update(name_traffic2code)\n",
    "\n",
    "# IC名 --> ICコード\n",
    "code2name = dict(zip(df_ic['ic_code'], df_ic['ic_name']))\n",
    "\n",
    "# ICコード --> ノードの度数（degree）\n",
    "code2degree = dict(zip(df_ic['ic_code'], df_ic['degree']))\n",
    "\n",
    "# ICコード --> ICが位置するKP\n",
    "code2KP = dict(zip(df_ic['ic_code'], df_ic['KP']))\n",
    "\n",
    "# ICコード --> ICが位置する都道府県コード\n",
    "code2prefcode = dict(zip(df_ic['ic_code'],df_ic['pref_code']))\n",
    "\n",
    "# ICコード --> ICが位置する経緯度\n",
    "code2lat = dict(zip(df_ic['ic_code'], df_ic['lat']))\n",
    "code2lng = dict(zip(df_ic['ic_code'], df_ic['lng']))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee47818-d63b-48e2-b992-c5ccb17678dd",
   "metadata": {},
   "source": [
    "### 区間名称を出発IC・到着ICに分割\n",
    "- \"foo 〜 bar\"形式の区間名称を2つのカラムに分割する（foo, bar）\n",
    "- 区間方向に応じて発着IC名を入れ替える"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "07495358-668a-47f4-a198-87271a16b922",
   "metadata": {},
   "outputs": [],
   "source": [
    "def split_segment_name(df):\n",
    "    def reorder_segment(x):\n",
    "        '''\n",
    "        区間方向に応じて出発IC・到着ICを入れ替える\n",
    "        '''\n",
    "        if x.方向 == '上り':\n",
    "            return x.segment[::-1]\n",
    "        elif x.方向 == '下り':\n",
    "            return x.segment\n",
    "        else:\n",
    "            raise ValueError\n",
    "    \n",
    "    # 全角スペースを除去して \"〜\" で分割 --> [start, end]の形式になる\n",
    "    df['segment'] = df.区間名称.str.replace('\\u3000', '').str.split('〜')\n",
    "    df['segment'] = df.apply(lambda x: reorder_segment(x), axis=1)\n",
    "    \n",
    "    # [start, end]形式の区間名称から出発IC・到着IC名を抽出\n",
    "    df['start_name'] = df.segment.apply(lambda l: l[0])\n",
    "    df['end_name'] = df.segment.apply(lambda l: l[-1])\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8a699b14-ea20-46f5-9423-f3d03fa182bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>3.90</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.00</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>6.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>8.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         区間名称  方向    KP      segment start_name end_name\n",
       "0  大泉ＪＣＴ　〜　所沢  上り  2.26  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ\n",
       "1  大泉ＪＣＴ　〜　所沢  上り  3.90  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ\n",
       "2  大泉ＪＣＴ　〜　所沢  上り  5.00  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ\n",
       "3  大泉ＪＣＴ　〜　所沢  上り  6.13  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ\n",
       "4  大泉ＪＣＴ　〜　所沢  上り  8.13  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = split_segment_name(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0e8fb79-b69f-465c-903c-11845cc61735",
   "metadata": {},
   "source": [
    "### IC名称をICマスタデータに統一"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "660ef81c-5c64-411f-a728-3dc13c8d6a74",
   "metadata": {},
   "outputs": [],
   "source": [
    "def convert_ic_name(df):\n",
    "    # トラカン用IC名称 --> マスタICコード\n",
    "    df['start_code'] = df.start_name.map(name2code)\n",
    "    df['end_code'] = df.end_name.map(name2code)\n",
    "    \n",
    "    # マスタICコード --> マスタIC名称\n",
    "    df['start_name'] = df.start_code.map(code2name)\n",
    "    df['end_name'] = df.end_code.map(code2name)\n",
    "    \n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a20626a2-7db4-4e07-a6cb-f1629efc24bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>3.90</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.00</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>6.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>8.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         区間名称  方向    KP      segment start_name end_name start_code end_code\n",
       "0  大泉ＪＣＴ　〜　所沢  上り  2.26  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210\n",
       "1  大泉ＪＣＴ　〜　所沢  上り  3.90  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210\n",
       "2  大泉ＪＣＴ　〜　所沢  上り  5.00  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210\n",
       "3  大泉ＪＣＴ　〜　所沢  上り  6.13  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210\n",
       "4  大泉ＪＣＴ　〜　所沢  上り  8.13  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = convert_ic_name(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aae2793f-681d-4a3e-a67e-39ac80d6ab56",
   "metadata": {},
   "source": [
    "### 新たなカラム（KP, 区間長, 度数, 都道府県コード, 経緯度, 制限速度）を追加\n",
    "- 出発IC・到着ICが位置するKP\n",
    "- トラカン設置区間の区間長\n",
    "- 出発IC・到着ICノードの度数\n",
    "- 出発IC・到着ICが位置する都道府県コード\n",
    "- 出発IC・到着ICが位置する経緯度\n",
    "- トラカン設置区間の制限速度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3cb2b8f5-c7f4-4091-aa87-e5c7fc820130",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>3.90</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.00</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>6.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>8.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>上り</td>\n",
       "      <td>33.49</td>\n",
       "      <td>[東松山, 坂戸西スマートＩＣ]</td>\n",
       "      <td>東松山</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>1800036</td>\n",
       "      <td>1800028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>上り</td>\n",
       "      <td>35.68</td>\n",
       "      <td>[東松山, 坂戸西スマートＩＣ]</td>\n",
       "      <td>東松山</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>1800036</td>\n",
       "      <td>1800028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>上り</td>\n",
       "      <td>36.50</td>\n",
       "      <td>[東松山, 坂戸西スマートＩＣ]</td>\n",
       "      <td>東松山</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>1800036</td>\n",
       "      <td>1800028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>上り</td>\n",
       "      <td>38.50</td>\n",
       "      <td>[東松山, 坂戸西スマートＩＣ]</td>\n",
       "      <td>東松山</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>1800036</td>\n",
       "      <td>1800028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>上り</td>\n",
       "      <td>39.40</td>\n",
       "      <td>[東松山, 坂戸西スマートＩＣ]</td>\n",
       "      <td>東松山</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>1800036</td>\n",
       "      <td>1800028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>上り</td>\n",
       "      <td>48.47</td>\n",
       "      <td>[花園, 嵐山小川]</td>\n",
       "      <td>花園</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>1800051</td>\n",
       "      <td>1800041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>上り</td>\n",
       "      <td>50.52</td>\n",
       "      <td>[花園, 嵐山小川]</td>\n",
       "      <td>花園</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>1800051</td>\n",
       "      <td>1800041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>上り</td>\n",
       "      <td>52.50</td>\n",
       "      <td>[花園, 嵐山小川]</td>\n",
       "      <td>花園</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>1800051</td>\n",
       "      <td>1800041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>上り</td>\n",
       "      <td>54.17</td>\n",
       "      <td>[花園, 嵐山小川]</td>\n",
       "      <td>花園</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>1800051</td>\n",
       "      <td>1800041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>上り</td>\n",
       "      <td>55.95</td>\n",
       "      <td>[花園, 嵐山小川]</td>\n",
       "      <td>花園</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>1800051</td>\n",
       "      <td>1800041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>上り</td>\n",
       "      <td>104.24</td>\n",
       "      <td>[赤城, 渋川伊香保]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>上り</td>\n",
       "      <td>106.07</td>\n",
       "      <td>[赤城, 渋川伊香保]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>上り</td>\n",
       "      <td>108.00</td>\n",
       "      <td>[赤城, 渋川伊香保]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>上り</td>\n",
       "      <td>110.55</td>\n",
       "      <td>[赤城, 渋川伊香保]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>上り</td>\n",
       "      <td>112.61</td>\n",
       "      <td>[昭和, 赤城]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>上り</td>\n",
       "      <td>113.80</td>\n",
       "      <td>[昭和, 赤城]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>上り</td>\n",
       "      <td>115.35</td>\n",
       "      <td>[昭和, 赤城]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>上り</td>\n",
       "      <td>117.84</td>\n",
       "      <td>[昭和, 赤城]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>上り</td>\n",
       "      <td>119.95</td>\n",
       "      <td>[昭和, 赤城]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>下り</td>\n",
       "      <td>2.48</td>\n",
       "      <td>[大泉ＪＣＴ, 所沢]</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>所沢</td>\n",
       "      <td>1110210</td>\n",
       "      <td>1800006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>下り</td>\n",
       "      <td>3.90</td>\n",
       "      <td>[大泉ＪＣＴ, 所沢]</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>所沢</td>\n",
       "      <td>1110210</td>\n",
       "      <td>1800006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>下り</td>\n",
       "      <td>6.00</td>\n",
       "      <td>[大泉ＪＣＴ, 所沢]</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>所沢</td>\n",
       "      <td>1110210</td>\n",
       "      <td>1800006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>下り</td>\n",
       "      <td>8.10</td>\n",
       "      <td>[大泉ＪＣＴ, 所沢]</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>所沢</td>\n",
       "      <td>1110210</td>\n",
       "      <td>1800006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>下り</td>\n",
       "      <td>33.29</td>\n",
       "      <td>[坂戸西スマートＩＣ, 東松山]</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>東松山</td>\n",
       "      <td>1800028</td>\n",
       "      <td>1800036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>下り</td>\n",
       "      <td>34.97</td>\n",
       "      <td>[坂戸西スマートＩＣ, 東松山]</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>東松山</td>\n",
       "      <td>1800028</td>\n",
       "      <td>1800036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>下り</td>\n",
       "      <td>36.68</td>\n",
       "      <td>[坂戸西スマートＩＣ, 東松山]</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>東松山</td>\n",
       "      <td>1800028</td>\n",
       "      <td>1800036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>下り</td>\n",
       "      <td>38.90</td>\n",
       "      <td>[坂戸西スマートＩＣ, 東松山]</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>東松山</td>\n",
       "      <td>1800028</td>\n",
       "      <td>1800036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>坂戸西スマートＩＣ　〜　東松山</td>\n",
       "      <td>下り</td>\n",
       "      <td>39.40</td>\n",
       "      <td>[坂戸西スマートＩＣ, 東松山]</td>\n",
       "      <td>坂戸西スマート</td>\n",
       "      <td>東松山</td>\n",
       "      <td>1800028</td>\n",
       "      <td>1800036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>下り</td>\n",
       "      <td>49.20</td>\n",
       "      <td>[嵐山小川, 花園]</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>花園</td>\n",
       "      <td>1800041</td>\n",
       "      <td>1800051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>下り</td>\n",
       "      <td>51.09</td>\n",
       "      <td>[嵐山小川, 花園]</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>花園</td>\n",
       "      <td>1800041</td>\n",
       "      <td>1800051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>下り</td>\n",
       "      <td>53.20</td>\n",
       "      <td>[嵐山小川, 花園]</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>花園</td>\n",
       "      <td>1800041</td>\n",
       "      <td>1800051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>嵐山小川　〜　花園</td>\n",
       "      <td>下り</td>\n",
       "      <td>55.20</td>\n",
       "      <td>[嵐山小川, 花園]</td>\n",
       "      <td>嵐山小川</td>\n",
       "      <td>花園</td>\n",
       "      <td>1800041</td>\n",
       "      <td>1800051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>下り</td>\n",
       "      <td>104.34</td>\n",
       "      <td>[渋川伊香保, 赤城]</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800091</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>下り</td>\n",
       "      <td>106.07</td>\n",
       "      <td>[渋川伊香保, 赤城]</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800091</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>下り</td>\n",
       "      <td>108.00</td>\n",
       "      <td>[渋川伊香保, 赤城]</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800091</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>渋川伊香保　〜　赤城</td>\n",
       "      <td>下り</td>\n",
       "      <td>110.54</td>\n",
       "      <td>[渋川伊香保, 赤城]</td>\n",
       "      <td>渋川伊香保</td>\n",
       "      <td>赤城</td>\n",
       "      <td>1800091</td>\n",
       "      <td>1800096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>112.50</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>113.58</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>115.35</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>117.82</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>120.02</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                区間名称  方向      KP           segment start_name end_name  \\\n",
       "0         大泉ＪＣＴ　〜　所沢  上り    2.26       [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ   \n",
       "1         大泉ＪＣＴ　〜　所沢  上り    3.90       [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ   \n",
       "2         大泉ＪＣＴ　〜　所沢  上り    5.00       [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ   \n",
       "3         大泉ＪＣＴ　〜　所沢  上り    6.13       [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ   \n",
       "4         大泉ＪＣＴ　〜　所沢  上り    8.13       [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ   \n",
       "19   坂戸西スマートＩＣ　〜　東松山  上り   33.49  [東松山, 坂戸西スマートＩＣ]        東松山  坂戸西スマート   \n",
       "20   坂戸西スマートＩＣ　〜　東松山  上り   35.68  [東松山, 坂戸西スマートＩＣ]        東松山  坂戸西スマート   \n",
       "21   坂戸西スマートＩＣ　〜　東松山  上り   36.50  [東松山, 坂戸西スマートＩＣ]        東松山  坂戸西スマート   \n",
       "22   坂戸西スマートＩＣ　〜　東松山  上り   38.50  [東松山, 坂戸西スマートＩＣ]        東松山  坂戸西スマート   \n",
       "23   坂戸西スマートＩＣ　〜　東松山  上り   39.40  [東松山, 坂戸西スマートＩＣ]        東松山  坂戸西スマート   \n",
       "28         嵐山小川　〜　花園  上り   48.47        [花園, 嵐山小川]         花園     嵐山小川   \n",
       "29         嵐山小川　〜　花園  上り   50.52        [花園, 嵐山小川]         花園     嵐山小川   \n",
       "30         嵐山小川　〜　花園  上り   52.50        [花園, 嵐山小川]         花園     嵐山小川   \n",
       "31         嵐山小川　〜　花園  上り   54.17        [花園, 嵐山小川]         花園     嵐山小川   \n",
       "32         嵐山小川　〜　花園  上り   55.95        [花園, 嵐山小川]         花園     嵐山小川   \n",
       "60        渋川伊香保　〜　赤城  上り  104.24       [赤城, 渋川伊香保]         赤城    渋川伊香保   \n",
       "61        渋川伊香保　〜　赤城  上り  106.07       [赤城, 渋川伊香保]         赤城    渋川伊香保   \n",
       "62        渋川伊香保　〜　赤城  上り  108.00       [赤城, 渋川伊香保]         赤城    渋川伊香保   \n",
       "63        渋川伊香保　〜　赤城  上り  110.55       [赤城, 渋川伊香保]         赤城    渋川伊香保   \n",
       "64           赤城　〜　昭和  上り  112.61          [昭和, 赤城]         昭和       赤城   \n",
       "65           赤城　〜　昭和  上り  113.80          [昭和, 赤城]         昭和       赤城   \n",
       "66           赤城　〜　昭和  上り  115.35          [昭和, 赤城]         昭和       赤城   \n",
       "67           赤城　〜　昭和  上り  117.84          [昭和, 赤城]         昭和       赤城   \n",
       "68           赤城　〜　昭和  上り  119.95          [昭和, 赤城]         昭和       赤城   \n",
       "69        大泉ＪＣＴ　〜　所沢  下り    2.48       [大泉ＪＣＴ, 所沢]      大泉ＪＣＴ       所沢   \n",
       "70        大泉ＪＣＴ　〜　所沢  下り    3.90       [大泉ＪＣＴ, 所沢]      大泉ＪＣＴ       所沢   \n",
       "71        大泉ＪＣＴ　〜　所沢  下り    6.00       [大泉ＪＣＴ, 所沢]      大泉ＪＣＴ       所沢   \n",
       "72        大泉ＪＣＴ　〜　所沢  下り    8.10       [大泉ＪＣＴ, 所沢]      大泉ＪＣＴ       所沢   \n",
       "87   坂戸西スマートＩＣ　〜　東松山  下り   33.29  [坂戸西スマートＩＣ, 東松山]    坂戸西スマート      東松山   \n",
       "88   坂戸西スマートＩＣ　〜　東松山  下り   34.97  [坂戸西スマートＩＣ, 東松山]    坂戸西スマート      東松山   \n",
       "89   坂戸西スマートＩＣ　〜　東松山  下り   36.68  [坂戸西スマートＩＣ, 東松山]    坂戸西スマート      東松山   \n",
       "90   坂戸西スマートＩＣ　〜　東松山  下り   38.90  [坂戸西スマートＩＣ, 東松山]    坂戸西スマート      東松山   \n",
       "91   坂戸西スマートＩＣ　〜　東松山  下り   39.40  [坂戸西スマートＩＣ, 東松山]    坂戸西スマート      東松山   \n",
       "96         嵐山小川　〜　花園  下り   49.20        [嵐山小川, 花園]       嵐山小川       花園   \n",
       "97         嵐山小川　〜　花園  下り   51.09        [嵐山小川, 花園]       嵐山小川       花園   \n",
       "98         嵐山小川　〜　花園  下り   53.20        [嵐山小川, 花園]       嵐山小川       花園   \n",
       "99         嵐山小川　〜　花園  下り   55.20        [嵐山小川, 花園]       嵐山小川       花園   \n",
       "126       渋川伊香保　〜　赤城  下り  104.34       [渋川伊香保, 赤城]      渋川伊香保       赤城   \n",
       "127       渋川伊香保　〜　赤城  下り  106.07       [渋川伊香保, 赤城]      渋川伊香保       赤城   \n",
       "128       渋川伊香保　〜　赤城  下り  108.00       [渋川伊香保, 赤城]      渋川伊香保       赤城   \n",
       "129       渋川伊香保　〜　赤城  下り  110.54       [渋川伊香保, 赤城]      渋川伊香保       赤城   \n",
       "130          赤城　〜　昭和  下り  112.50          [赤城, 昭和]         赤城       昭和   \n",
       "131          赤城　〜　昭和  下り  113.58          [赤城, 昭和]         赤城       昭和   \n",
       "132          赤城　〜　昭和  下り  115.35          [赤城, 昭和]         赤城       昭和   \n",
       "133          赤城　〜　昭和  下り  117.82          [赤城, 昭和]         赤城       昭和   \n",
       "134          赤城　〜　昭和  下り  120.02          [赤城, 昭和]         赤城       昭和   \n",
       "\n",
       "    start_code end_code  \n",
       "0      1800006  1110210  \n",
       "1      1800006  1110210  \n",
       "2      1800006  1110210  \n",
       "3      1800006  1110210  \n",
       "4      1800006  1110210  \n",
       "19     1800036  1800028  \n",
       "20     1800036  1800028  \n",
       "21     1800036  1800028  \n",
       "22     1800036  1800028  \n",
       "23     1800036  1800028  \n",
       "28     1800051  1800041  \n",
       "29     1800051  1800041  \n",
       "30     1800051  1800041  \n",
       "31     1800051  1800041  \n",
       "32     1800051  1800041  \n",
       "60     1800096  1800091  \n",
       "61     1800096  1800091  \n",
       "62     1800096  1800091  \n",
       "63     1800096  1800091  \n",
       "64     1800106  1800096  \n",
       "65     1800106  1800096  \n",
       "66     1800106  1800096  \n",
       "67     1800106  1800096  \n",
       "68     1800106  1800096  \n",
       "69     1110210  1800006  \n",
       "70     1110210  1800006  \n",
       "71     1110210  1800006  \n",
       "72     1110210  1800006  \n",
       "87     1800028  1800036  \n",
       "88     1800028  1800036  \n",
       "89     1800028  1800036  \n",
       "90     1800028  1800036  \n",
       "91     1800028  1800036  \n",
       "96     1800041  1800051  \n",
       "97     1800041  1800051  \n",
       "98     1800041  1800051  \n",
       "99     1800041  1800051  \n",
       "126    1800091  1800096  \n",
       "127    1800091  1800096  \n",
       "128    1800091  1800096  \n",
       "129    1800091  1800096  \n",
       "130    1800096  1800106  \n",
       "131    1800096  1800106  \n",
       "132    1800096  1800106  \n",
       "133    1800096  1800106  \n",
       "134    1800096  1800106  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static.loc[df_static.merge(df_icnet.loc[:, ['start_code', 'end_code', 'limit']], on=['start_code','end_code'], how='left').limit.isna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "221c8e71-f689-41d0-9978-6c9eba5a5931",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_new_columns(df):\n",
    "    # KP\n",
    "    df['start_KP'] = df.start_code.map(code2KP)\n",
    "    df['end_KP'] = df.end_code.map(code2KP)\n",
    "    \n",
    "    # 区間長\n",
    "    df['KP_distance'] = np.abs(df.start_KP - df.end_KP)\n",
    "    \n",
    "    # 度数\n",
    "    df['start_degree'] = df.start_code.map(code2degree)\n",
    "    df['end_degree'] = df.end_code.map(code2degree)\n",
    "    \n",
    "    # 都道府県コード\n",
    "    df['start_pref_code'] = df.start_code.map(code2prefcode)\n",
    "    df['end_pref_code'] = df.end_code.map(code2prefcode)\n",
    "    \n",
    "    # 経緯度\n",
    "    df['start_lat'] = df.start_code.map(code2lat)\n",
    "    df['start_lng'] = df.start_code.map(code2lng)\n",
    "    df['end_lat'] = df.end_code.map(code2lat)\n",
    "    df['end_lng'] = df.end_code.map(code2lng)\n",
    "    \n",
    "    # 制限速度\n",
    "    ## icnet（ローカル版）とマージして制限速度用のカラムを追加\n",
    "    ## 一部区間については、トラカン区間とICマスタ区間の齟齬によって欠損する\n",
    "    df = df.merge(\n",
    "        df_icnet.loc[:, ['start_code', 'end_code', 'limit']], on=['start_code','end_code'], how='left'\n",
    "    )\n",
    "    ## 「渋川伊香保 〜 赤城」区間の制限速度は80km/hであるため、ハードコーディングで欠損を埋める\n",
    "    df.loc[(df_static.start_name == '赤城') | (df_static.end_name == '赤城'), 'limit'] = 80\n",
    "    ## その他の欠損は100km/hで埋める\n",
    "    df.loc[:, 'limit'].fillna(100, inplace=True)\n",
    "        \n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "0eadce6b-2556-47ef-8468-066f236621bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>end_degree</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "      <th>start_lat</th>\n",
       "      <th>start_lng</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>end_lng</th>\n",
       "      <th>limit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>2.26</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "      <td>9.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>35.80615</td>\n",
       "      <td>139.535511</td>\n",
       "      <td>35.75582</td>\n",
       "      <td>139.601514</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>3.90</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "      <td>9.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>35.80615</td>\n",
       "      <td>139.535511</td>\n",
       "      <td>35.75582</td>\n",
       "      <td>139.601514</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.00</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "      <td>9.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>35.80615</td>\n",
       "      <td>139.535511</td>\n",
       "      <td>35.75582</td>\n",
       "      <td>139.601514</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>6.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "      <td>9.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>35.80615</td>\n",
       "      <td>139.535511</td>\n",
       "      <td>35.75582</td>\n",
       "      <td>139.601514</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>大泉ＪＣＴ　〜　所沢</td>\n",
       "      <td>上り</td>\n",
       "      <td>8.13</td>\n",
       "      <td>[所沢, 大泉ＪＣＴ]</td>\n",
       "      <td>所沢</td>\n",
       "      <td>大泉ＪＣＴ</td>\n",
       "      <td>1800006</td>\n",
       "      <td>1110210</td>\n",
       "      <td>9.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>35.80615</td>\n",
       "      <td>139.535511</td>\n",
       "      <td>35.75582</td>\n",
       "      <td>139.601514</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         区間名称  方向    KP      segment start_name end_name start_code end_code  \\\n",
       "0  大泉ＪＣＴ　〜　所沢  上り  2.26  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210   \n",
       "1  大泉ＪＣＴ　〜　所沢  上り  3.90  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210   \n",
       "2  大泉ＪＣＴ　〜　所沢  上り  5.00  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210   \n",
       "3  大泉ＪＣＴ　〜　所沢  上り  6.13  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210   \n",
       "4  大泉ＪＣＴ　〜　所沢  上り  8.13  [所沢, 大泉ＪＣＴ]         所沢    大泉ＪＣＴ    1800006  1110210   \n",
       "\n",
       "   start_KP  end_KP  KP_distance  start_degree  end_degree  start_pref_code  \\\n",
       "0       9.4     0.8          8.6           4.0         8.0               11   \n",
       "1       9.4     0.8          8.6           4.0         8.0               11   \n",
       "2       9.4     0.8          8.6           4.0         8.0               11   \n",
       "3       9.4     0.8          8.6           4.0         8.0               11   \n",
       "4       9.4     0.8          8.6           4.0         8.0               11   \n",
       "\n",
       "   end_pref_code  start_lat   start_lng   end_lat     end_lng  limit  \n",
       "0             13   35.80615  139.535511  35.75582  139.601514  100.0  \n",
       "1             13   35.80615  139.535511  35.75582  139.601514  100.0  \n",
       "2             13   35.80615  139.535511  35.75582  139.601514  100.0  \n",
       "3             13   35.80615  139.535511  35.75582  139.601514  100.0  \n",
       "4             13   35.80615  139.535511  35.75582  139.601514  100.0  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = add_new_columns(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "48881cd2-49b5-4ac7-9cc9-c5cdb61d9fe7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>end_degree</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "      <th>start_lat</th>\n",
       "      <th>start_lng</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>end_lng</th>\n",
       "      <th>limit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>117.82</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "      <td>111.3</td>\n",
       "      <td>120.7</td>\n",
       "      <td>9.4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>36.53490</td>\n",
       "      <td>139.052806</td>\n",
       "      <td>36.61077</td>\n",
       "      <td>139.070694</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>赤城　〜　昭和</td>\n",
       "      <td>下り</td>\n",
       "      <td>120.02</td>\n",
       "      <td>[赤城, 昭和]</td>\n",
       "      <td>赤城</td>\n",
       "      <td>昭和</td>\n",
       "      <td>1800096</td>\n",
       "      <td>1800106</td>\n",
       "      <td>111.3</td>\n",
       "      <td>120.7</td>\n",
       "      <td>9.4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>36.53490</td>\n",
       "      <td>139.052806</td>\n",
       "      <td>36.61077</td>\n",
       "      <td>139.070694</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "      <td>下り</td>\n",
       "      <td>122.00</td>\n",
       "      <td>[昭和, 沼田]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>沼田(関越道)</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800111</td>\n",
       "      <td>120.7</td>\n",
       "      <td>125.9</td>\n",
       "      <td>5.2</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>36.61077</td>\n",
       "      <td>139.070694</td>\n",
       "      <td>36.65190</td>\n",
       "      <td>139.073294</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "      <td>下り</td>\n",
       "      <td>123.85</td>\n",
       "      <td>[昭和, 沼田]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>沼田(関越道)</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800111</td>\n",
       "      <td>120.7</td>\n",
       "      <td>125.9</td>\n",
       "      <td>5.2</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>36.61077</td>\n",
       "      <td>139.070694</td>\n",
       "      <td>36.65190</td>\n",
       "      <td>139.073294</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>昭和　〜　沼田</td>\n",
       "      <td>下り</td>\n",
       "      <td>125.37</td>\n",
       "      <td>[昭和, 沼田]</td>\n",
       "      <td>昭和</td>\n",
       "      <td>沼田(関越道)</td>\n",
       "      <td>1800106</td>\n",
       "      <td>1800111</td>\n",
       "      <td>120.7</td>\n",
       "      <td>125.9</td>\n",
       "      <td>5.2</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>36.61077</td>\n",
       "      <td>139.070694</td>\n",
       "      <td>36.65190</td>\n",
       "      <td>139.073294</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        区間名称  方向      KP   segment start_name end_name start_code end_code  \\\n",
       "133  赤城　〜　昭和  下り  117.82  [赤城, 昭和]         赤城       昭和    1800096  1800106   \n",
       "134  赤城　〜　昭和  下り  120.02  [赤城, 昭和]         赤城       昭和    1800096  1800106   \n",
       "135  昭和　〜　沼田  下り  122.00  [昭和, 沼田]         昭和  沼田(関越道)    1800106  1800111   \n",
       "136  昭和　〜　沼田  下り  123.85  [昭和, 沼田]         昭和  沼田(関越道)    1800106  1800111   \n",
       "137  昭和　〜　沼田  下り  125.37  [昭和, 沼田]         昭和  沼田(関越道)    1800106  1800111   \n",
       "\n",
       "     start_KP  end_KP  KP_distance  start_degree  end_degree  start_pref_code  \\\n",
       "133     111.3   120.7          9.4           4.0         4.0               10   \n",
       "134     111.3   120.7          9.4           4.0         4.0               10   \n",
       "135     120.7   125.9          5.2           4.0         4.0               10   \n",
       "136     120.7   125.9          5.2           4.0         4.0               10   \n",
       "137     120.7   125.9          5.2           4.0         4.0               10   \n",
       "\n",
       "     end_pref_code  start_lat   start_lng   end_lat     end_lng  limit  \n",
       "133             10   36.53490  139.052806  36.61077  139.070694   80.0  \n",
       "134             10   36.53490  139.052806  36.61077  139.070694   80.0  \n",
       "135             10   36.61077  139.070694  36.65190  139.073294   80.0  \n",
       "136             10   36.61077  139.070694  36.65190  139.073294   80.0  \n",
       "137             10   36.61077  139.070694  36.65190  139.073294   80.0  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa148644-e126-4a7e-9330-2404592b8217",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "#### ICノードの度数を追加"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e5dc2f8b-12b1-4f3b-a8fe-ecb07caaabe6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_degree(df):\n",
    "    res = df.assign(\n",
    "        start_degree=df.start_code.map(code2degree),\n",
    "        end_degree=df.end_code.map(code2degree))\n",
    "    return res.assign(degree_sum=res.start_degree + res.end_degree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "92391e31-2766-40c9-998f-3f59b8deb2c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment_name</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>direction</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>end_degree</th>\n",
       "      <th>degree_sum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>111.795</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>113.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>115.682</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>117.610</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>119.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               区間名称  方向       KP       segment_name start_name end_name  \\\n",
       "0  上河内ＳＡスマートＩＣ　〜　矢板  上り  111.795  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "1  上河内ＳＡスマートＩＣ　〜　矢板  上り  113.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "2  上河内ＳＡスマートＩＣ　〜　矢板  上り  115.682  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "3  上河内ＳＡスマートＩＣ　〜　矢板  上り  117.610  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "4  上河内ＳＡスマートＩＣ　〜　矢板  上り  119.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "\n",
       "  direction start_code end_code  start_degree  end_degree  degree_sum  \n",
       "0        上り    1040096  1040091           4.0         4.0         8.0  \n",
       "1        上り    1040096  1040091           4.0         4.0         8.0  \n",
       "2        上り    1040096  1040091           4.0         4.0         8.0  \n",
       "3        上り    1040096  1040091           4.0         4.0         8.0  \n",
       "4        上り    1040096  1040091           4.0         4.0         8.0  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = add_degree(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e211f92-1628-4159-844c-85858bcaef56",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "#### ICのKPを追加"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "c245a4a2-3b68-436f-a395-be0ca32a418a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_kp(df):\n",
    "    res = df.assign(\n",
    "        start_KP=df.start_code.map(code2KP),\n",
    "        end_KP=df.end_code.map(code2KP))\n",
    "    \n",
    "    return res.assign(\n",
    "        KP_distance=np.abs(res.start_KP - res.end_KP))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "17adda29-e14a-4285-847b-82fe479448e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment_name</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>direction</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>end_degree</th>\n",
       "      <th>degree_sum</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>KP_distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>111.795</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>113.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>115.682</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>117.610</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>119.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               区間名称  方向       KP       segment_name start_name end_name  \\\n",
       "0  上河内ＳＡスマートＩＣ　〜　矢板  上り  111.795  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "1  上河内ＳＡスマートＩＣ　〜　矢板  上り  113.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "2  上河内ＳＡスマートＩＣ　〜　矢板  上り  115.682  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "3  上河内ＳＡスマートＩＣ　〜　矢板  上り  117.610  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "4  上河内ＳＡスマートＩＣ　〜　矢板  上り  119.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "\n",
       "  direction start_code end_code  start_degree  end_degree  degree_sum  \\\n",
       "0        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "1        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "2        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "3        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "4        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "\n",
       "   start_KP  end_KP  KP_distance  \n",
       "0     120.2   110.6          9.6  \n",
       "1     120.2   110.6          9.6  \n",
       "2     120.2   110.6          9.6  \n",
       "3     120.2   110.6          9.6  \n",
       "4     120.2   110.6          9.6  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = add_kp(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8e96280-6d96-4c8a-ae58-47ef5753288e",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "#### ICの都道府県コードを追加"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d7f83299-41ef-45a5-9d8b-85bec2645c9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_prefcode(df):\n",
    "    return df.assign(\n",
    "        start_pref_code=df.start_code.map(code2prefcode),\n",
    "        end_pref_code=df.end_code.map(code2prefcode))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2d5ed858-1238-4d46-a26d-f7e1944f5022",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment_name</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>direction</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>end_degree</th>\n",
       "      <th>degree_sum</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>111.795</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>113.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>115.682</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>117.610</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>119.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               区間名称  方向       KP       segment_name start_name end_name  \\\n",
       "0  上河内ＳＡスマートＩＣ　〜　矢板  上り  111.795  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "1  上河内ＳＡスマートＩＣ　〜　矢板  上り  113.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "2  上河内ＳＡスマートＩＣ　〜　矢板  上り  115.682  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "3  上河内ＳＡスマートＩＣ　〜　矢板  上り  117.610  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "4  上河内ＳＡスマートＩＣ　〜　矢板  上り  119.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "\n",
       "  direction start_code end_code  start_degree  end_degree  degree_sum  \\\n",
       "0        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "1        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "2        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "3        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "4        上り    1040096  1040091           4.0         4.0         8.0   \n",
       "\n",
       "   start_KP  end_KP  KP_distance  start_pref_code  end_pref_code  \n",
       "0     120.2   110.6          9.6                9              9  \n",
       "1     120.2   110.6          9.6                9              9  \n",
       "2     120.2   110.6          9.6                9              9  \n",
       "3     120.2   110.6          9.6                9              9  \n",
       "4     120.2   110.6          9.6                9              9  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = add_prefcode(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "478497fc-40ca-49e3-80ec-254c8ca24ea3",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "#### ICの経緯度を追加"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "5baa08bd-628d-445f-9d90-c35be8dc7d51",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_latlon(df):\n",
    "    return df.assign(\n",
    "        start_lat=df.start_code.map(code2lat),\n",
    "        start_lng=df.start_code.map(code2lng),\n",
    "        end_lat=df.end_code.map(code2lat),\n",
    "        end_lng=df.end_code.map(code2lng))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d5d7c496-5abc-44c8-ab08-ab116173b7ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment_name</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>direction</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>...</th>\n",
       "      <th>degree_sum</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "      <th>start_lat</th>\n",
       "      <th>start_lng</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>end_lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>111.795</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>113.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>115.682</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>117.610</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>119.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               区間名称  方向       KP       segment_name start_name end_name  \\\n",
       "0  上河内ＳＡスマートＩＣ　〜　矢板  上り  111.795  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "1  上河内ＳＡスマートＩＣ　〜　矢板  上り  113.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "2  上河内ＳＡスマートＩＣ　〜　矢板  上り  115.682  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "3  上河内ＳＡスマートＩＣ　〜　矢板  上り  117.610  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "4  上河内ＳＡスマートＩＣ　〜　矢板  上り  119.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "\n",
       "  direction start_code end_code  start_degree  ...  degree_sum  start_KP  \\\n",
       "0        上り    1040096  1040091           4.0  ...         8.0     120.2   \n",
       "1        上り    1040096  1040091           4.0  ...         8.0     120.2   \n",
       "2        上り    1040096  1040091           4.0  ...         8.0     120.2   \n",
       "3        上り    1040096  1040091           4.0  ...         8.0     120.2   \n",
       "4        上り    1040096  1040091           4.0  ...         8.0     120.2   \n",
       "\n",
       "   end_KP  KP_distance  start_pref_code  end_pref_code  start_lat  start_lng  \\\n",
       "0   110.6          9.6                9              9    36.7592   139.9399   \n",
       "1   110.6          9.6                9              9    36.7592   139.9399   \n",
       "2   110.6          9.6                9              9    36.7592   139.9399   \n",
       "3   110.6          9.6                9              9    36.7592   139.9399   \n",
       "4   110.6          9.6                9              9    36.7592   139.9399   \n",
       "\n",
       "    end_lat     end_lng  \n",
       "0  36.68657  139.893639  \n",
       "1  36.68657  139.893639  \n",
       "2  36.68657  139.893639  \n",
       "3  36.68657  139.893639  \n",
       "4  36.68657  139.893639  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = add_latlon(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1095b1c9-5e46-49ec-ba1f-df2fbd7168c1",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "#### 区間の制限速度を追加"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "e5c4205c-ca79-4469-8a04-84e4a686f4b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_limit_speed(df):\n",
    "    res = df.merge(\n",
    "        df_icnet.loc[:, ['start_code', 'end_code', 'limit']],\n",
    "        on=['start_code','end_code'], how='left')\n",
    "    \n",
    "    # 館山道 制限速度 全ては100\n",
    "    # 東北道も関東支社管轄かつトラカン対応区間はすべて100km/h\n",
    "    if TARGET_ROAD == 'tateyama' or TARGET_ROAD == 'touhoku':\n",
    "        res.limit.fillna(100, inplace=True)\n",
    "        \n",
    "    return res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "fca12040-343d-4abe-bdbe-4ab31f874342",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>区間名称</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>segment_name</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>direction</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_degree</th>\n",
       "      <th>...</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "      <th>start_lat</th>\n",
       "      <th>start_lng</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>end_lng</th>\n",
       "      <th>limit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>111.795</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>113.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>115.682</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>117.610</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>上河内ＳＡスマートＩＣ　〜　矢板</td>\n",
       "      <td>上り</td>\n",
       "      <td>119.672</td>\n",
       "      <td>[上河内ＳＡスマートＩＣ, 矢板]</td>\n",
       "      <td>矢板</td>\n",
       "      <td>上河内ＳＡ</td>\n",
       "      <td>上り</td>\n",
       "      <td>1040096</td>\n",
       "      <td>1040091</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>36.7592</td>\n",
       "      <td>139.9399</td>\n",
       "      <td>36.68657</td>\n",
       "      <td>139.893639</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               区間名称  方向       KP       segment_name start_name end_name  \\\n",
       "0  上河内ＳＡスマートＩＣ　〜　矢板  上り  111.795  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "1  上河内ＳＡスマートＩＣ　〜　矢板  上り  113.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "2  上河内ＳＡスマートＩＣ　〜　矢板  上り  115.682  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "3  上河内ＳＡスマートＩＣ　〜　矢板  上り  117.610  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "4  上河内ＳＡスマートＩＣ　〜　矢板  上り  119.672  [上河内ＳＡスマートＩＣ, 矢板]         矢板    上河内ＳＡ   \n",
       "\n",
       "  direction start_code end_code  start_degree  ...  start_KP  end_KP  \\\n",
       "0        上り    1040096  1040091           4.0  ...     120.2   110.6   \n",
       "1        上り    1040096  1040091           4.0  ...     120.2   110.6   \n",
       "2        上り    1040096  1040091           4.0  ...     120.2   110.6   \n",
       "3        上り    1040096  1040091           4.0  ...     120.2   110.6   \n",
       "4        上り    1040096  1040091           4.0  ...     120.2   110.6   \n",
       "\n",
       "   KP_distance  start_pref_code  end_pref_code  start_lat  start_lng  \\\n",
       "0          9.6                9              9    36.7592   139.9399   \n",
       "1          9.6                9              9    36.7592   139.9399   \n",
       "2          9.6                9              9    36.7592   139.9399   \n",
       "3          9.6                9              9    36.7592   139.9399   \n",
       "4          9.6                9              9    36.7592   139.9399   \n",
       "\n",
       "    end_lat     end_lng  limit  \n",
       "0  36.68657  139.893639  100.0  \n",
       "1  36.68657  139.893639  100.0  \n",
       "2  36.68657  139.893639  100.0  \n",
       "3  36.68657  139.893639  100.0  \n",
       "4  36.68657  139.893639  100.0  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_static = add_limit_speed(df_static)\n",
    "df_static.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "15bb2c6a-1eb0-4b1c-b4a5-9166bc19ac8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 赤城周辺の区間の制限速度は80km/hであるため、ハードコーディングによって制限速度のカラムの欠損を埋める\n",
    "df_static.loc[(df_static.start_name == '赤城') | (df_static.end_name == '赤城'), 'limit'] = 80\n",
    "\n",
    "# それ以外の区間の制限速度は100km/h\n",
    "df_static.loc[:, 'limit'].fillna(100, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2f08066-c04c-4492-a384-d368dfcc6132",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 日時カラムの処理"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "033541c1-8b7f-4824-a338-47cf16a3bb41",
   "metadata": {},
   "source": [
    "### datetime列の追加"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "d5d51a78-0407-4944-ad79-0d07f4e3a64f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_datetime_columns(df):\n",
    "    # datetime形式の文字列からdatetime型のカラムを作成\n",
    "    datetime_str_series = (df.年 + '/' + df.月 + '/' + df.日 + ' ' + df.時刻)\n",
    "    \n",
    "    res = df.assign(\n",
    "        datetime=datetime_str_series.apply(lambda t: dt.datetime.strptime(t, '%Y/%m/%d %H:%M')))\n",
    "    \n",
    "    # month, day, hour, minute, dayofweek情報を付加\n",
    "    res = res.assign(\n",
    "        month=res.datetime.dt.month,\n",
    "        day=res.datetime.dt.day,\n",
    "        hour=res.datetime.dt.hour,\n",
    "        minute=res.datetime.dt.minute,\n",
    "        dayofweek=res.datetime.dt.dayofweek + 1)\n",
    "    return res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "64c0dfcb-9e67-48fe-b9bf-77a8c24a6ae4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "      <th>datetime</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>hour</th>\n",
       "      <th>minute</th>\n",
       "      <th>dayofweek</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:0</td>\n",
       "      <td>2024-02-01 00:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:10</td>\n",
       "      <td>2024-02-01 00:10:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:15</td>\n",
       "      <td>2024-02-01 00:15:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:20</td>\n",
       "      <td>2024-02-01 00:20:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:25</td>\n",
       "      <td>2024-02-01 00:25:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      年  月  日    時刻            datetime  month  day  hour  minute  dayofweek\n",
       "0  2024  2  1   0:0 2024-02-01 00:00:00      2    1     0       0          4\n",
       "1  2024  2  1  0:10 2024-02-01 00:10:00      2    1     0      10          4\n",
       "2  2024  2  1  0:15 2024-02-01 00:15:00      2    1     0      15          4\n",
       "3  2024  2  1  0:20 2024-02-01 00:20:00      2    1     0      20          4\n",
       "4  2024  2  1  0:25 2024-02-01 00:25:00      2    1     0      25          4"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_datetime = add_datetime_columns(df_datetime)\n",
    "df_datetime.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0bee44f4-e360-44f6-bcdb-9f0ecaa98b61",
   "metadata": {},
   "source": [
    "### 休日判定"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "cec9c241-65f9-4bd2-bf30-271ca8f136a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def judge_holiday(df):\n",
    "    col_dayofweek = df.dayofweek\n",
    "    col_datetime = df.datetime\n",
    "    \n",
    "    flag_dayofweek = col_dayofweek >= 6\n",
    "    flag_jpholiday = col_datetime.map(jpholiday.is_holiday)\n",
    "    \n",
    "    return df.assign(is_holiday=(flag_dayofweek | flag_jpholiday).astype(int))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "7f4c2ccf-2847-40cc-829f-f4c620a5c91a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "      <th>datetime</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>hour</th>\n",
       "      <th>minute</th>\n",
       "      <th>dayofweek</th>\n",
       "      <th>is_holiday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:0</td>\n",
       "      <td>2024-02-01 00:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:10</td>\n",
       "      <td>2024-02-01 00:10:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:15</td>\n",
       "      <td>2024-02-01 00:15:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:20</td>\n",
       "      <td>2024-02-01 00:20:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0:25</td>\n",
       "      <td>2024-02-01 00:25:00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      年  月  日    時刻            datetime  month  day  hour  minute  dayofweek  \\\n",
       "0  2024  2  1   0:0 2024-02-01 00:00:00      2    1     0       0          4   \n",
       "1  2024  2  1  0:10 2024-02-01 00:10:00      2    1     0      10          4   \n",
       "2  2024  2  1  0:15 2024-02-01 00:15:00      2    1     0      15          4   \n",
       "3  2024  2  1  0:20 2024-02-01 00:20:00      2    1     0      20          4   \n",
       "4  2024  2  1  0:25 2024-02-01 00:25:00      2    1     0      25          4   \n",
       "\n",
       "   is_holiday  \n",
       "0           0  \n",
       "1           0  \n",
       "2           0  \n",
       "3           0  \n",
       "4           0  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_datetime = judge_holiday(df_datetime)\n",
    "df_datetime.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6f7f1b2-96ac-40f3-942b-1aa74551f5c2",
   "metadata": {
    "tags": []
   },
   "source": [
    "## 静的カラム + 日時カラム + 動的カラム"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ec585e6-08cc-4351-8156-ba4f5574f060",
   "metadata": {},
   "source": [
    "### merge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "ba978b6c-4b56-43d3-8b9c-24952f3b3e21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>年</th>\n",
       "      <th>月</th>\n",
       "      <th>日</th>\n",
       "      <th>時刻</th>\n",
       "      <th>方向</th>\n",
       "      <th>KP</th>\n",
       "      <th>区間名称</th>\n",
       "      <th>全車</th>\n",
       "      <th>OCC</th>\n",
       "      <th>速度</th>\n",
       "      <th>...</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>end_lng</th>\n",
       "      <th>limit</th>\n",
       "      <th>datetime</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>hour</th>\n",
       "      <th>minute</th>\n",
       "      <th>dayofweek</th>\n",
       "      <th>is_holiday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10:40</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.6</td>\n",
       "      <td>浦和　〜　岩槻</td>\n",
       "      <td>211.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>...</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.723697</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2024-02-08 10:40:00</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10:45</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.6</td>\n",
       "      <td>浦和　〜　岩槻</td>\n",
       "      <td>221.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>...</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.723697</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2024-02-08 10:45:00</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10:50</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.6</td>\n",
       "      <td>浦和　〜　岩槻</td>\n",
       "      <td>219.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>...</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.723697</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2024-02-08 10:50:00</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>50</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10:55</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.6</td>\n",
       "      <td>浦和　〜　岩槻</td>\n",
       "      <td>220.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>...</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.723697</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2024-02-08 10:55:00</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>55</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>11:0</td>\n",
       "      <td>上り</td>\n",
       "      <td>5.6</td>\n",
       "      <td>浦和　〜　岩槻</td>\n",
       "      <td>239.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>...</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.723697</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2024-02-08 11:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 37 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      年  月  日     時刻  方向   KP     区間名称     全車   OCC    速度  ...   end_lat  \\\n",
       "0  2024  2  8  10:40  上り  5.6  浦和　〜　岩槻  211.0  10.0  78.0  ...  35.89012   \n",
       "1  2024  2  8  10:45  上り  5.6  浦和　〜　岩槻  221.0  10.0  77.0  ...  35.89012   \n",
       "2  2024  2  8  10:50  上り  5.6  浦和　〜　岩槻  219.0  10.0  79.0  ...  35.89012   \n",
       "3  2024  2  8  10:55  上り  5.6  浦和　〜　岩槻  220.0  10.0  78.0  ...  35.89012   \n",
       "4  2024  2  8   11:0  上り  5.6  浦和　〜　岩槻  239.0  12.0  76.0  ...  35.89012   \n",
       "\n",
       "      end_lng  limit            datetime month  day  hour  minute  dayofweek  \\\n",
       "0  139.723697  100.0 2024-02-08 10:40:00     2    8    10      40          4   \n",
       "1  139.723697  100.0 2024-02-08 10:45:00     2    8    10      45          4   \n",
       "2  139.723697  100.0 2024-02-08 10:50:00     2    8    10      50          4   \n",
       "3  139.723697  100.0 2024-02-08 10:55:00     2    8    10      55          4   \n",
       "4  139.723697  100.0 2024-02-08 11:00:00     2    8    11       0          4   \n",
       "\n",
       "   is_holiday  \n",
       "0           0  \n",
       "1           0  \n",
       "2           0  \n",
       "3           0  \n",
       "4           0  \n",
       "\n",
       "[5 rows x 37 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_traffic = (df_traffic\n",
    "              .merge(cudf.from_pandas(df_static), on=static_cols, how='left')\n",
    "              .merge(cudf.from_pandas(df_datetime), on=datetime_cols, how='left'))\n",
    "df_traffic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "279da2cc-712a-40e4-a07e-b1df1ba0d564",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "      <th>start_lat</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>start_lng</th>\n",
       "      <th>...</th>\n",
       "      <th>lane_count</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>KP</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>direction</th>\n",
       "      <th>limit</th>\n",
       "      <th>OCC</th>\n",
       "      <th>全車</th>\n",
       "      <th>速度</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-02-08 10:40:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>211.0</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-02-08 10:45:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>77.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-02-08 10:50:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>219.0</td>\n",
       "      <td>79.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-02-08 10:55:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-02-08 11:00:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>239.0</td>\n",
       "      <td>76.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             datetime start_name end_name start_code end_code  \\\n",
       "0 2024-02-08 10:40:00         岩槻     浦和本線    1040016  1040013   \n",
       "1 2024-02-08 10:45:00         岩槻     浦和本線    1040016  1040013   \n",
       "2 2024-02-08 10:50:00         岩槻     浦和本線    1040016  1040013   \n",
       "3 2024-02-08 10:55:00         岩槻     浦和本線    1040016  1040013   \n",
       "4 2024-02-08 11:00:00         岩槻     浦和本線    1040016  1040013   \n",
       "\n",
       "   start_pref_code  end_pref_code  start_lat   end_lat  start_lng  ...  \\\n",
       "0               11             11    35.9347  35.89012  139.69075  ...   \n",
       "1               11             11    35.9347  35.89012  139.69075  ...   \n",
       "2               11             11    35.9347  35.89012  139.69075  ...   \n",
       "3               11             11    35.9347  35.89012  139.69075  ...   \n",
       "4               11             11    35.9347  35.89012  139.69075  ...   \n",
       "\n",
       "   lane_count  KP_distance   KP  start_KP  end_KP  direction  limit   OCC  \\\n",
       "0           3          5.7  5.6      10.5     4.8         上り  100.0  10.0   \n",
       "1           3          5.7  5.6      10.5     4.8         上り  100.0  10.0   \n",
       "2           3          5.7  5.6      10.5     4.8         上り  100.0  10.0   \n",
       "3           3          5.7  5.6      10.5     4.8         上り  100.0  10.0   \n",
       "4           3          5.7  5.6      10.5     4.8         上り  100.0  12.0   \n",
       "\n",
       "      全車    速度  \n",
       "0  211.0  78.0  \n",
       "1  221.0  77.0  \n",
       "2  219.0  79.0  \n",
       "3  220.0  78.0  \n",
       "4  239.0  76.0  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selected_cols = [\n",
    "    'datetime', 'start_name', 'end_name', 'start_code', 'end_code', \n",
    "    'start_pref_code', 'end_pref_code', 'start_lat', 'end_lat', 'start_lng', 'end_lng',\n",
    "    'start_degree', 'end_degree', 'month', 'day', 'dayofweek', 'is_holiday', 'hour', 'minute',\n",
    "    'lane_count', 'KP_distance', 'KP', 'start_KP', 'end_KP', 'direction', 'limit', 'OCC', '全車', '速度'\n",
    "]\n",
    "\n",
    "df_traffic = df_traffic.loc[:, selected_cols]\n",
    "df_traffic.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8387815-6475-4c74-941f-5516f81bc802",
   "metadata": {},
   "source": [
    "### rename"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "d54eef58-5a78-4034-a7c4-2473af4183b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>start_name</th>\n",
       "      <th>end_name</th>\n",
       "      <th>start_code</th>\n",
       "      <th>end_code</th>\n",
       "      <th>start_pref_code</th>\n",
       "      <th>end_pref_code</th>\n",
       "      <th>start_lat</th>\n",
       "      <th>end_lat</th>\n",
       "      <th>start_lng</th>\n",
       "      <th>...</th>\n",
       "      <th>lane_count</th>\n",
       "      <th>KP_distance</th>\n",
       "      <th>KP</th>\n",
       "      <th>start_KP</th>\n",
       "      <th>end_KP</th>\n",
       "      <th>direction</th>\n",
       "      <th>limit_speed</th>\n",
       "      <th>OCC</th>\n",
       "      <th>allCars</th>\n",
       "      <th>speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-02-08 10:40:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>211.0</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-02-08 10:45:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>77.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-02-08 10:50:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>219.0</td>\n",
       "      <td>79.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-02-08 10:55:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-02-08 11:00:00</td>\n",
       "      <td>岩槻</td>\n",
       "      <td>浦和本線</td>\n",
       "      <td>1040016</td>\n",
       "      <td>1040013</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>35.9347</td>\n",
       "      <td>35.89012</td>\n",
       "      <td>139.69075</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.6</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.8</td>\n",
       "      <td>上り</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>239.0</td>\n",
       "      <td>76.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             datetime start_name end_name start_code end_code  \\\n",
       "0 2024-02-08 10:40:00         岩槻     浦和本線    1040016  1040013   \n",
       "1 2024-02-08 10:45:00         岩槻     浦和本線    1040016  1040013   \n",
       "2 2024-02-08 10:50:00         岩槻     浦和本線    1040016  1040013   \n",
       "3 2024-02-08 10:55:00         岩槻     浦和本線    1040016  1040013   \n",
       "4 2024-02-08 11:00:00         岩槻     浦和本線    1040016  1040013   \n",
       "\n",
       "   start_pref_code  end_pref_code  start_lat   end_lat  start_lng  ...  \\\n",
       "0               11             11    35.9347  35.89012  139.69075  ...   \n",
       "1               11             11    35.9347  35.89012  139.69075  ...   \n",
       "2               11             11    35.9347  35.89012  139.69075  ...   \n",
       "3               11             11    35.9347  35.89012  139.69075  ...   \n",
       "4               11             11    35.9347  35.89012  139.69075  ...   \n",
       "\n",
       "   lane_count  KP_distance   KP  start_KP  end_KP  direction limit_speed  \\\n",
       "0           3          5.7  5.6      10.5     4.8         上り       100.0   \n",
       "1           3          5.7  5.6      10.5     4.8         上り       100.0   \n",
       "2           3          5.7  5.6      10.5     4.8         上り       100.0   \n",
       "3           3          5.7  5.6      10.5     4.8         上り       100.0   \n",
       "4           3          5.7  5.6      10.5     4.8         上り       100.0   \n",
       "\n",
       "    OCC  allCars  speed  \n",
       "0  10.0    211.0   78.0  \n",
       "1  10.0    221.0   77.0  \n",
       "2  10.0    219.0   79.0  \n",
       "3  10.0    220.0   78.0  \n",
       "4  12.0    239.0   76.0  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rename_map = {\n",
    "    '方向': 'direction'\n",
    "    '全車': 'allCars',\n",
    "    '速度': 'speed',\n",
    "    # 'limit': 'limit_speed',\n",
    "}\n",
    "\n",
    "df_traffic = df_traffic.rename(columns=rename_map)\n",
    "df_traffic.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6061ece8-eb41-4e89-ae5f-83498a980eab",
   "metadata": {},
   "source": [
    "### 2kmトラカン基数をマスタデータと一致させる"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "edb2d116-540a-4a54-8dd1-b257d4291547",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2022/12/1以前の92.99kpという値を92.801kpに置換する\n",
    "kp_before = 92.99\n",
    "kp_after = 92.801\n",
    "\n",
    "condition = (\n",
    "    (df_traffic.start_name == '駒寄ＰＡ') & (df_traffic.end_name == '前橋')\n",
    "    & (df_traffic.KP == kp_before)\n",
    ")\n",
    "\n",
    "df_traffic.loc[condition, 'KP'] = kp_after"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "6277afd0-0d98-4e04-af0e-4f173c671157",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2021/4/1〜2022/3/31の期間のみ存在する24.999KPの仮設トラカンを使用しない\n",
    "condition = (\n",
    "    (df_traffic.start_name == '久喜白岡ＪＣＴ') & (df_traffic.end_name == '久喜')\n",
    "    & (df_traffic.KP == 24.999)\n",
    ")\n",
    "\n",
    "df_traffic = df_traffic.loc[~condition].reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "046a89d7-39c7-4649-9c26-2a3f0bef4a3a",
   "metadata": {
    "tags": []
   },
   "source": [
    "# ソートして保存"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "a6d78e77-ab83-4a4e-9553-1cf13a24b43c",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_traffic = df_traffic.sort_values(\n",
    "    ['datetime', 'KP', 'start_code', 'end_code']\n",
    ").reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "24071fb2-0bf0-488a-99dc-82c5b36a279e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "msno.matrix(df_traffic.to_pandas(), labels=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "903f8738-d2d6-4dd9-ac4d-c8a345a0d611",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "OUTPUT_FILE = f'./traffic/{TARGET_ROAD}_{PERIOD}_2KP.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "bb114d46-38a2-4ff3-842c-d8789ee31f7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'./traffic/touhoku_20240201-20240506_2KP.csv'"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "OUTPUT_FILE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f37f3b3d-8fb4-4746-a621-32fedcf17a12",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1min 21s, sys: 1.37 s, total: 1min 23s\n",
      "Wall time: 1min 23s\n"
     ]
    }
   ],
   "source": [
    "%time df_traffic.to_pandas().to_csv(OUTPUT_FILE, index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "1cf19b04-d6c2-4383-945e-8702d5797c25",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "datetime,start_name,end_name,start_code,end_code,start_pref_code,end_pref_code,start_lat,end_lat,start_lng,end_lng,start_degree,end_degree,month,day,dayofweek,is_holiday,hour,minute,lane_count,KP_distance,KP,start_KP,end_KP,direction,limit_speed,OCC,allCars,speed\n",
      "2024-02-01 00:00:00,浦和本線,岩槻,1040013,1040016,11,11,35.89012,35.9347,139.72369722222223,139.69075,4.0,4.0,2,1,4,0,0,0,3,5.7,5.47,4.8,10.5,下り,100.0,2.0,37.0,88.0\n",
      "2024-02-01 00:00:00,岩槻,浦和本線,1040016,1040013,11,11,35.9347,35.89012,139.69075,139.72369722222223,4.0,4.0,2,1,4,0,0,0,3,5.7,5.6,10.5,4.8,上り,100.0,6.0,97.0,70.0\n",
      "2024-02-01 00:00:00,浦和本線,岩槻,1040013,1040016,11,11,35.89012,35.9347,139.72369722222223,139.69075,4.0,4.0,2,1,4,0,0,0,1,5.7,7.3,4.8,10.5,下り,100.0,3.0,18.0,82.0\n",
      "2024-02-01 00:00:00,岩槻,浦和本線,1040016,1040013,11,11,35.9347,35.89012,139.69075,139.72369722222223,4.0,4.0,2,1,4,0,0,0,3,5.7,7.3,10.5,4.8,上り,100.0,5.0,84.0,85.0\n"
     ]
    }
   ],
   "source": [
    "!head -n5 \"$OUTPUT_FILE\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "ca150114-b59f-45c2-89db-8c3f9c8069a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2024-05-06 23:55:00,那須高原ＳＡ,那須,1040121,1040116,9,9,37.05368,37.00026,140.10424722222223,140.04276388888889,4.0,4.0,5,6,1,1,23,55,2,8.0,160.229,160.5,152.5,上り,100.0,2.0,35.0,101.0\n",
      "2024-05-06 23:55:00,白河,那須高原ＳＡ,1040126,1040121,7,9,37.11645,37.05368,140.1675,140.10424722222223,4.0,4.0,5,6,1,1,23,55,1,9.199999999999989,162.169,169.7,160.5,上り,100.0,4.0,36.0,89.0\n",
      "2024-05-06 23:55:00,白河,那須高原ＳＡ,1040126,1040121,7,9,37.11645,37.05368,140.1675,140.10424722222223,4.0,4.0,5,6,1,1,23,55,2,9.199999999999989,164.133,169.7,160.5,上り,100.0,2.0,45.0,94.0\n",
      "2024-05-06 23:55:00,白河,那須高原ＳＡ,1040126,1040121,7,9,37.11645,37.05368,140.1675,140.10424722222223,4.0,4.0,5,6,1,1,23,55,2,9.199999999999989,166.085,169.7,160.5,上り,100.0,3.0,45.0,89.0\n",
      "2024-05-06 23:55:00,白河,那須高原ＳＡ,1040126,1040121,7,9,37.11645,37.05368,140.1675,140.10424722222223,4.0,4.0,5,6,1,1,23,55,2,9.199999999999989,168.082,169.7,160.5,上り,100.0,1.0,33.0,93.0\n"
     ]
    }
   ],
   "source": [
    "!tail -n5 \"$OUTPUT_FILE\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
